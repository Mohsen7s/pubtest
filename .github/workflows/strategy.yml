name: Default Android Makefile

on:
  push :
    paths:
        - '.github/workflows/strategy.yml'

env:
  DOCKER_BUILDKIT: 1
  DEBIAN_FRONTEND: noninteractive

jobs:
  timestrategy:
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        include:
          - data: 
            - include:
              - name: android
                steps:
                  - components: |
                     make get_gradle_dependencies_list-application-services
#                     ./rbm/rbm build android-toolchain --target release --target torbrowser-android-armv7
#                     ./rbm/rbm build application-services --step get_gradle_dependencies_list --target release --target torbrowser-android-armv7                                          
#                     ./rbm/rbm build android-components --step get_gradle_dependencies_list --target release --target torbrowser-android-armv7                     
#                     ./rbm/rbm build fenix --step get_gradle_dependencies_list --target release --target torbrowser-android-armv7                     
                  - components: |                  
                      make get_gradle_dependencies_list-android-components
#                     this is completely useless 3 minutes of run                      
#                     ./rbm/rbm build clang --target release --target torbrowser-android-armv7
                  - components: |
                      make get_gradle_dependencies_list-fenix
#                     ./rbm/rbm build rust --target release --target torbrowser-android-armv7
#                     ./rbm/rbm build node --target release --target torbrowser-android-armv7
                  - components: |
                     ./rbm/rbm build node --target release --target torbrowser-android-armv7
                     ./rbm/rbm build clang --target release --target torbrowser-android-armv7                     
#                     ./rbm/rbm build fenix --target release --target torbrowser-android-armv7                      
#                     build fenix starts to build clang, so better to seperate it                     
#                     ./rbm/rbm build android-components --target release --target torbrowser-android-armv7
                  - components: |
                     ./rbm/rbm build release --target release --target torbrowser-android-armv7
#              - name: windows
#                steps:
#                  - components: |
#                     ./rbm/rbm build mingw-w64 --target release --target torbrowser-windows-x86_64
#                  - components: |
#                     ./rbm/rbm build clang --target release --target torbrowser-windows-x86_64
#                  - components: |
#                     ./rbm/rbm build rust --target release --target torbrowser-windows-x86_64
#                     ./rbm/rbm build node --target release --target torbrowser-windows-x86_64
#                  - components: |
#                     ./rbm/rbm build firefox --target release --target torbrowser-windows-x86_64
#                  - components: |
#                     ./rbm/rbm build release --target release --target torbrowser-windows-x86_64
#              - name: linux
#                steps:
#                  - components: |
#                     ./rbm/rbm build gcc --target release --target torbrowser-linux-x86_64
#                  - components: |
#                     ./rbm/rbm build clang --target release --target torbrowser-linux-x86_64
#                  - components: |
#                     ./rbm/rbm build rust --target release --target torbrowser-linux-x86_64
#                     ./rbm/rbm build node --target release --target torbrowser-linux-x86_64
#                  - components: |
#                     ./rbm/rbm build firefox --target release --target torbrowser-linux-x86_64
#                  - components: |
#                     ./rbm/rbm build release --target release --target torbrowser-linux-x86_64
#              - name: macosx
#                steps:
#                  - components: |
#                     ./rbm/rbm build macosx-toolchain --target release --target torbrowser-osx-x86_64
#                  - components: |
#                     ./rbm/rbm build clang --target release --target torbrowser-osx-x86_64
#                  - components: |
#                     ./rbm/rbm build rust --target release --target torbrowser-osx-x86_64
#                     ./rbm/rbm build node --target release --target torbrowser-osx-x86_64
#                  - components: |
#                     ./rbm/rbm build firefox --target release --target torbrowser-osx-x86_64
#                  - components: |
#                     ./rbm/rbm build release --target release --target torbrowser-osx-x86_64
#
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: Set Dynamic Matrix
        id: setmatrix
#this patch inability of github workflow to parse multiline strings
        run: |        
          yamlAsJson='${{ toJSON(matrix.data[0]) }}'
          yamlAsJson="${yamlAsJson//'%'/'%25'}"
          yamlAsJson="${yamlAsJson//$'\n'/'%0A'}"
          yamlAsJson="${yamlAsJson//$'\r'/'%0D'}"
          echo "::set-output name=matrix::$yamlAsJson"
          
  stage1:
    runs-on: ubuntu-latest
    name: Build Fetch
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: ubuntu:22.04
          step-image-name: mohsen7s/tbb:sc1
          run-command: |
            apt-get update
            apt install -y -qq wget git build-essential vim curl
            apt install -y -qq libyaml-libyaml-perl libtemplate-perl libdatetime-perl \
                               libio-handle-util-perl libio-all-perl \
                               libio-captureoutput-perl libjson-perl libpath-tiny-perl \
                               libstring-shellquote-perl libsort-versions-perl \
                               libdigest-sha-perl libdata-uuid-perl libdata-dump-perl \
                               libfile-copy-recursive-perl libfile-slurp-perl git \
                               uidmap
            rm -rf /var/lib/apt/lists/* 
            usermod --add-subuids 1000000-1099999 --add-subgids 1000000-1099999 root
            git config --global http.postBuffer 524288000
            git config --global https.postBuffer 524288000
            git config --global http.sslVerify false
            git config --global https.sslVerify false
            git config --global core.compression -1
            git clone https://gitlab.torproject.org/tpo/applications/tor-browser-build.git
            cd tor-browser-build
            make submodule-update
            cd rbm
            rm -fr container
            wget https://gitlab.torproject.org/tpo/applications/rbm/-/raw/cad40965ce1204936a0df71c405bf0393b534ef9/container
            chmod 777 container
            cd ..
            make fetch
            
  stage2:
    runs-on: ubuntu-latest
    needs: [stage1, timestrategy]
    name: Build Compilers
    strategy:
      matrix: ${{ fromJson(needs.timestrategy.outputs.matrix) }}
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: mohsen7s/tbb:sc1
          step-image-name: mohsen7s/tbb:sc1.defand.0.${{ matrix.name }}
          run-command: |
            cd tor-browser-build
            ${{ matrix.steps[0].components }}
            rm -fr logs/
  

  stage3:
    runs-on: ubuntu-latest
    needs: [stage2, timestrategy]
    name: Build Clang
    strategy:
      matrix: ${{ fromJson(needs.timestrategy.outputs.matrix) }}
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: mohsen7s/tbb:sc1.defand.0.${{ matrix.name }}
          step-image-name: mohsen7s/tbb:sc1.defand.1.${{ matrix.name }}
          run-command: |
            cd tor-browser-build
            ${{ matrix.steps[1].components }}
            rm -fr logs/
  
   
  stage4:
    runs-on: ubuntu-latest
    needs: [stage3, timestrategy]
    name: Build Rust And Node
    strategy:
      matrix: ${{ fromJson(needs.timestrategy.outputs.matrix) }}
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: mohsen7s/tbb:sc1.defand.1.${{ matrix.name }}
          step-image-name: mohsen7s/tbb:sc1.defand.2.${{ matrix.name }}
          run-command: |
            cd tor-browser-build
            ${{ matrix.steps[2].components }}
            rm -fr logs/  
   
  stage5:
    runs-on: ubuntu-latest
    needs: [stage4, timestrategy]
    name: Build Firefox

    strategy:
      matrix: ${{ fromJson(needs.timestrategy.outputs.matrix) }}
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: mohsen7s/tbb:sc1.defand.2.${{ matrix.name }}
          step-image-name: mohsen7s/tbb:sc1.defand.3.${{ matrix.name }}
          run-command: |
            cd tor-browser-build
            ${{ matrix.steps[3].components }}
            rm -fr logs/  
  stage6:
    runs-on: ubuntu-latest
    needs: [stage5, timestrategy]
    name: Build Release
    strategy:
      matrix: ${{ fromJson(needs.timestrategy.outputs.matrix) }}
    steps:
      - uses: mohsen7s/runner-prune-except-docker@main
        with:
          docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          use-image-name: mohsen7s/tbb:sc1.defand.3.${{ matrix.name }}
          step-image-name: mohsen7s/tbb:sc1.defand.4.${{ matrix.name }}
          run-command: |
            cd tor-browser-build
            ${{ matrix.steps[4].components }}
            rm -fr logs/  
