name: Sample Run Include Syntax Json Format

on:
  push :
    paths:
        - '.github/workflows/testci.yml'
      
      
jobs: 
  job1:
    runs-on: ubuntu-latest
    
    strategy: 
      fail-fast: false
      matrix:
        include:
          - data: 
            - include:
              - name: android
                components: |
                  ./rbm/rbm build android-toolchain --target release --target torbrowser-android-armv7
                  ./rbm/rbm build clang --target release --target torbrowser-android-armv7
              - name: windows
                components: |
                  ./rbm/rbm build mingw-w64 --target release --target torbrowser-windows-x86_64
                  ./rbm/rbm build clang --target release --target torbrowser-windows-x86_64
              - name: linux
                components: |
                  ./rbm/rbm build gcc --target release --target torbrowser-linux-x86_64
                  ./rbm/rbm build clang --target release --target torbrowser-linux-x86_64
              - name: macosx
                components: |
                  ./rbm/rbm build macosx-toolchain --target release --target torbrowser-osx-x86_64

    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: Set Dynamic Matrix
        id: setmatrix
        run: |
          matrixStringifiedObject='${{ toJSON(matrix.data[0]) }}'
          echo $matrixStringifiedObject
          matrixStringifiedObject="${matrixStringifiedObject//'%'/'%25'}"
          matrixStringifiedObject="${matrixStringifiedObject//$'\n'/'%0A'}"
          matrixStringifiedObject="${matrixStringifiedObject//$'\r'/'%0D'}"
          echo $matrixStringifiedObject
          echo "::set-output name=matrix::$matrixStringifiedObject"
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.job1.outputs.matrix) }}

#      matrix: ${{ fromJson('{"include":[{"name":"windows","target":"torbrowser-windows-x86_64","components":["mingw-w64","clang"]},{"name":"android","target":"torbrowser-android-armv7","components":["android-toolchain","clang"]}]}') }}
    steps:
#    - run: echo ${{ needs.job1.outputs.matrix }}
    - run: echo Run ${{ matrix.components[0] }}
 
