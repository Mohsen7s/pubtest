name: Make Image for tbb

on:
  push :
    paths:
        - '.github/workflows/tbb_make_docker.yml'


env:
  DOCKER_BUILDKIT: 1
  DEBIAN_FRONTEND: noninteractive
  RBM_NUM_PROCS: 16

jobs:
  browser:
    name: tbb fetch and gradle fenix
    runs-on: ubuntu-latest
    steps:

      - name: Free 80GB
        run: |
          sudo rm -rf "/usr/local/"
          sudo rm -rf "/usr/share/"
          sudo rm -rf "/opt/"
  
          #sudo find / -type d -exec du --threshold=100000000 -h -a  {} +
          
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 69000
          swap-size-mb: 12228
          temp-reserve-mb: 8
          remove-dotnet: 'false'
          remove-android: 'false'
          remove-haskell: 'false'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.1.1
        with:
          driver-opts: |
            image=moby/buildkit:master          
        
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

#WTF!! we need to use magical comments to let use security on RUN arg, https://stackoverflow.com/a/55153182/1780739
      - name: Get rid of repository checkout
        run: |
          cat >> Dockerfile << EOF
          # syntax = docker/dockerfile:experimental
          FROM ubuntu:22.04
          LABEL maintainer="some@fag.com"
          LABEL version="0.1"
          LABEL description="This help you build tor with single command on any enviroment, keep in mind 22 is in alpha"
          ENV DEBIAN_FRONTEND=noninteractive
          RUN cd /dev && mknod -m 777 console c 5 1 && mknod -m 777 /dev/console c 5 1
          RUN apt-get update
          RUN apt install -y wget git build-essential vim curl
          RUN apt install -y libyaml-libyaml-perl libtemplate-perl libdatetime-perl \
                             libio-handle-util-perl libio-all-perl \
                             libio-captureoutput-perl libjson-perl libpath-tiny-perl \
                             libstring-shellquote-perl libsort-versions-perl \
                             libdigest-sha-perl libdata-uuid-perl libdata-dump-perl \
                             libfile-copy-recursive-perl libfile-slurp-perl git \
                             uidmap
          RUN rm -rf /var/lib/apt/lists/* 
          #RUN sed -ie 's/GRUB_CMDLINE_LINUX=.*/GRUB_CMDLINE_LINUX="systemd.legacy_systemd_cgroup_controller=1 "/' /etc/default/grub
          #RUN sed -ie 's/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT="systemd.legacy_systemd_cgroup_controller=1 "/' /etc/default/grub
          #RUN update-grub
          #RUN sysctl -w kernel.unprivileged_userns_clone=1
          # -u 121 -g docker -G docker,adm,systemd-journal,sudo test2
          #RUN useradd -m -d /home/test2 test2
          #RUN passwd -d test2
          #RUN usermod --add-subuids 1100000-1199999 --add-subgids 1100000-1199999 test2
          #COPY builder.sh /home
          WORKDIR /home
          RUN usermod --add-subuids 1000000-1099999 --add-subgids 1000000-1099999 root
          RUN git config --global http.postBuffer 524288000 \
              && git config --global https.postBuffer 524288000 \
              && git config --global http.sslVerify false \
              && git config --global https.sslVerify false \
              && git config --global core.compression -1
          RUN --security=insecure git clone https://gitlab.torproject.org/tpo/applications/tor-browser-build.git \
              && cd tor-browser-build \
              && make submodule-update \
              && cd rbm \
              && rm -fr container \
              && wget https://gitlab.torproject.org/tpo/applications/rbm/-/raw/cad40965ce1204936a0df71c405bf0393b534ef9/container \
              && chmod 777 container \
              && cd .. \
              && script -q -e -c "bash -c \"make fetch && make cargo_vendor-application-services && make cargo_vendor-cbindgen-android && make cargo_vendor-cbindgen && make cargo_vendor-lucetc && make cargo_vendor-uniffi-rs && du out/container-image/* -h \" "
          #./rbm/rbm build release --target release --target torbrowser-windows-x86_64
          #make release-windows-x86_64'
          #ENTRYPOINT ["/usr/bin/bash", "/home/builder.sh"]
          EOF
          du * -h

#              && make fetch \
#              && make cargo_vendor-application-services \
#              && make cargo_vendor-cbindgen-android \
#              && make cargo_vendor-cbindgen \
#              && make cargo_vendor-lucetc \
#              && make cargo_vendor-uniffi-rs \
#              && make get_gradle_dependencies_list-application-services
#              
#      - name: build using cmd
#        shell: 'script -q -e -c "bash {0}"'
#        run: |
#          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#          DOCKER_BUILDKIT=1 docker buildx build --quiet --push --tag tbb:fetchcargo1106 --allow security.insecure .
#          docker push mohsen7s/tbb:fetchcargo1106
          
      - name: Build with Docker
        uses: docker/build-push-action@v2.2.2
        with:
          push: true
          tags: tbb:fetchcargo1106
          context: .
          allow: |
            security.insecure
          file: /home/runner/work/pubtest/pubtest/Dockerfile
          build-args: |
            DEBIAN_FRONTEND=noninteractive
#            
#          outputs: type=docker,dest=./dock_torimage.tar
#       sudo find /home -type f -exec du --threshold=100000000 -h -a  {} +
